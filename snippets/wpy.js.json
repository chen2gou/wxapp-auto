{
  "wepy.request": {
      "prefix": "wepy.request",
      "body": [
          "wepy.request({",
          "\turl: 'https://${1:URL}',",
          "\tdata: {$2},",
          "\tmethod: '${3:GET}', // OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT",
          "\t// header: {}, // 设置请求的 header",
          "\tsuccess: function(res){",
          "\t\t${4:// success}",
          "\t}",
          "})"
      ],
      "description": "发起 https 请求。一个微信小程序，同时只能有5个网络请求连接。"
  },
  "wepy.connectSocket": {
      "prefix": "wepy.connectSocket",
      "body": [
          "wepy.connectSocket({",
          "\turl: \\\"wss://${1:URL}\\"
      ],
      "description": "创建一个 WebSocket 连接。"
  },
  "wepy.onSocketClose": {
      "prefix": "wepy.onSocketClose",
      "body": [
          "wepy.onSocketClose(function() {",
          "\t${1:// callback}",
          "})"
      ],
      "description": "监听 WebSocket 关闭。"
  },
  "wepy.onSocketError": {
      "prefix": "wepy.onSocketError",
      "body": [
          "wepy.onSocketError(function() {",
          "\t${1:// callback}",
          "})"
      ],
      "description": "监听 WebSocket 错误。"
  },
  "wepy.onSocketMessage": {
      "prefix": "wepy.onSocketMessage",
      "body": [
          "wepy.onSocketMessage(function(data) {",
          "\t${1:// data}",
          "})"
      ],
      "description": "监听 WebSocket 接受到服务器的消息事件。"
  },
  "wepy.onSocketOpen": {
      "prefix": "wepy.onSocketOpen",
      "body": [
          "wepy.onSocketOpen(function() {",
          "\t${1:// callback}",
          "})"
      ],
      "description": "监听 WebSocket 连接打开事件。"
  },
  "wepy.sendSocketMessage": {
      "prefix": "wepy.sendSocketMessage",
      "body": [
          "wepy.sendSocketMessage({",
          "\tdata: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "通过 WebSocket 连接发送数据，需要先 wepy.connectSocket，并在 wepy.onSocketOpen 回调之后才能发送。"
  },
  "wepy.downloadFile": {
      "prefix": "wepy.downloadFile",
      "body": [
          "wepy.downloadFile({",
          "\turl: \\\"https://${1:URL}\\"
      ],
      "description": "下载文件资源到本地。客户端直接发起一个 HTTP GET 请求，把下载到的资源根据 type 进行处理，并返回文件的本地临时路径。"
  },
  "wepy.uploadFile": {
      "prefix": "wepy.uploadFile",
      "body": [
          "wepy.uploadFile({",
          "\turl: 'https://${1:String}',",
          "\tfilePath:'${2:filePath}',",
          "\tname:'${3:name}',",
          "\t// header: {}, // 设置请求的 header",
          "\t// formData: {}, // HTTP 请求中其他额外的 form data",
          "\tsuccess: function(res){",
          "\t\t${4:// success}",
          "\t}",
          "})"
      ],
      "description": "将本地资源上传到开发者服务器。"
  },
  "wepy.closeSocket": {
      "prefix": "wepy.closeSocket",
      "body": [
          "wepy.closeSocket()"
      ],
      "description": "关闭 WebSocket 连接。"
  },
  "wepy.chooseImage": {
      "prefix": "wepy.chooseImage",
      "body": [
          "wepy.chooseImage({",
          "\tcount: ${1:9}, // 最多可以选择的图片张数，默认9",
          "\tsizeType: [${2:'original', 'compressed'}], // original 原图，compressed 压缩图，默认二者都有",
          "\tsourceType: [${3:'album', 'camera'}], // album 从相册选图，camera 使用相机，默认二者都有",
          "\tsuccess: function(res){",
          "\t\t${4:// success}",
          "\t}",
          "})"
      ],
      "description": "从本地相册选择图片或使用相机拍照。"
  },
  "wepy.previewImage": {
      "prefix": "wepy.previewImage",
      "body": [
          "wepy.previewImage({",
          "\t// current: '${1:String}', // 当前显示图片的链接，不填则默认为 urls 的第一张",
          "\turls: [${2:StringArray}],",
          "\tsuccess: function(res){",
          "\t\t${3:// success}",
          "\t}",
          "})"
      ],
      "description": "预览图片。"
  },
  "wepy.getImageInfo": {
      "prefix": "wepy.getImageInfo",
      "body": [
          "wepy.getImageInfo({",
          "\tsrc: '${1:src}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "获取图片信息。"
  },
  "wepy.startRecord": {
      "prefix": "wepy.startRecord",
      "body": [
          "wepy.startRecord({",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "开始录音。当主动调用 wepy.stopRecord，或者录音超过1分钟时自动结束录音，返回录音文件的临时文件路径。"
  },
  "wepy.stopRecord": {
      "prefix": "wepy.stopRecord",
      "body": [
          "wepy.stopRecord({",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "​ 主动调用停止录音。"
  },
  "wepy.playVoice": {
      "prefix": "wepy.playVoice",
      "body": [
          "wepy.playVoice({",
          "\tfilePath: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "​开始播放语音，同时只允许一个语音文件正在播放，如果前一个语音文件还没播放完，将中断前一个语音播放。"
  },
  "wepy.pauseVoice": {
      "prefix": "wepy.pauseVoice",
      "body": [
          "wepy.pauseVoice({",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "​暂停正在播放的语音。"
  },
  "wepy.stopVoice": {
      "prefix": "wepy.stopVoice",
      "body": [
          "wepy.stopVoice({",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "​结束播放语音。"
  },
  "wepy.getBackgroundAudioPlayerState": {
      "prefix": "wepy.getBackgroundAudioPlayerState",
      "body": [
          "wepy.getBackgroundAudioPlayerState({",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "​获取音乐播放状态。"
  },
  "wepy.playBackgroundAudio": {
      "prefix": "wepy.playBackgroundAudio",
      "body": [
          "wepy.playBackgroundAudio({",
          "\tdataUrl: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "​播放音乐，同时只能有一首音乐正在播放。"
  },
  "wepy.pauseBackgroundAudio": {
      "prefix": "wepy.pauseBackgroundAudio",
      "body": [
          "wepy.pauseBackgroundAudio({",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "​暂停播放音乐。"
  },
  "wepy.seekBackgroundAudio": {
      "prefix": "wepy.seekBackgroundAudio",
      "body": [
          "wepy.seekBackgroundAudio({",
          "\tposition: ${1:Number},",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "控制音乐播放进度。"
  },
  "wepy.stopBackgroundAudio": {
      "prefix": "wepy.stopBackgroundAudio",
      "body": [
          "wepy.stopBackgroundAudio({",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "​停止播放音乐。"
  },
  "wepy.onBackgroundAudioPlay": {
      "prefix": "wepy.onBackgroundAudioPlay",
      "body": [
          "wepy.onBackgroundAudioPlay(function() {",
          "\t${1:// callback}",
          "})"
      ],
      "description": "​监听音乐播放。"
  },
  "wepy.onBackgroundAudioPause": {
      "prefix": "wepy.onBackgroundAudioPause",
      "body": [
          "wepy.onBackgroundAudioPause(function() {",
          "\t${1:// callback}",
          "})"
      ],
      "description": "​监听音乐暂停。"
  },
  "wepy.onBackgroundAudioStop": {
      "prefix": "wepy.onBackgroundAudioStop",
      "body": [
          "wepy.onBackgroundAudioStop(function() {",
          "\t${1:// callback}",
          "})"
      ],
      "description": "​监听音乐停止。"
  },
  "wepy.chooseVideo": {
      "prefix": "wepy.chooseVideo",
      "body": [
          "wepy.chooseVideo({",
          "\tsourceType: ['album', 'camera'], // album 从相册选视频，camera 使用相机拍摄",
          "\t// maxDuration: 60, // 拍摄视频最长拍摄时间，单位秒。最长支持60秒",
          "\tcamera: ['front', 'back'],",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "拍摄视频或从手机相册中选视频，返回视频的临时文件路径。"
  },
  "wepy.createAudioContext": {
      "prefix": "wepy.createAudioContext",
      "body": [
          "wepy.createAudioContext(${1:AudioId})",
          ""
      ],
      "description": "创建并返回 audio 上下文 audioContext 对象。"
  },
  "wepy.createVideoContext": {
      "prefix": "wepy.createVideoContext",
      "body": [
          "wepy.createVideoContext(${1:VideoId})",
          ""
      ],
      "description": "创建并返回 video 上下文 videoContext 对象。"
  },
  "wepy.saveFile": {
      "prefix": "wepy.saveFile",
      "body": [
          "wepy.saveFile({",
          "\ttempFilePath: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "保存文件到本地。"
  },
  "wepy.openDocument": {
      "prefix": "wepy.openDocument",
      "body": [
          "wepy.openDocument({",
          "\tfilePath: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "在新 webview 打开文档，支持格式：doc, xls, ppt, pdf, docx, xlsx, pptx。"
  },
  "wepy.getSavedFileList": {
      "prefix": "wepy.getSavedFileList",
      "body": [
          "wepy.getSavedFileList({",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "获取该小程序下已保存的文件列表。"
  },
  "wepy.getSavedFileInfo": {
      "prefix": "wepy.getSavedFileInfo",
      "body": [
          "wepy.getSavedFileInfo({",
          "\tfilePath: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "获取该已保存的文件信息。"
  },
  "wepy.removeSavedFile": {
      "prefix": "wepy.removeSavedFile",
      "body": [
          "wepy.removeSavedFile({",
          "\tfilePath: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "删除已保存的文件。"
  },
  "wepy.setStorage": {
      "prefix": "wepy.setStorage",
      "body": [
          "wepy.setStorage({",
          "\tkey: '${1:String}',",
          "\tdata: ${2:Object/String},",
          "\tsuccess: function(res){",
          "\t\t${3:// success}",
          "\t}",
          "})"
      ],
      "description": "将数据存储在本地缓存中指定的 key 中，这是一个异步接口。"
  },
  "wepy.setStorageSync": {
      "prefix": "wepy.setStorageSync",
      "body": [
          "wepy.setStorageSync('${1:String}', ${2:Object/String})"
      ],
      "description": "将 data 存储在本地缓存中指定的 key 中，这是一个同步接口。"
  },
  "wepy.getStorage": {
      "prefix": "wepy.getStorage",
      "body": [
          "wepy.getStorage({",
          "\tkey: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "从本地缓存中异步获取指定 key 对应的内容，这是一个异步接口。"
  },
  "wepy.getStorageSync": {
      "prefix": "wepy.getStorageSync",
      "body": [
          "wepy.getStorageSync('${1:String}')"
      ],
      "description": "从本地缓存中同步获取指定 key 对应的内容，这是一个同步接口。"
  },
  "wepy.clearStorage": {
      "prefix": "wepy.clearStorage",
      "body": [
          "wepy.clearStorage({",
          "\tkey: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "清理本地数据缓存，这是一个异步接口。"
  },
  "wepy.clearStorageSync": {
      "prefix": "wepy.clearStorageSync",
      "body": [
          "wepy.clearStorageSync()"
      ],
      "description": "清理本地数据缓存，这是一个同步接口。"
  },
  "wepy.getStorageInfo": {
      "prefix": "wepy.getStorageInfo",
      "body": [
          "wepy.getStorageInfo({",
          "\tkey: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "获取 storage 相关信息，这是一个异步接口。"
  },
  "wepy.getStorageInfoSync": {
      "prefix": "wepy.getStorageInfoSync",
      "body": [
          "wepy.getStorageInfoSync()"
      ],
      "description": "获取 storage 相关信息，这是一个同步接口。"
  },
  "wepy.removeStorage": {
      "prefix": "wepy.removeStorage",
      "body": [
          "wepy.removeStorage({",
          "\tkey: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "指定 key 删除本地数据，这是一个异步接口。"
  },
  "wepy.removeStorageSync": {
      "prefix": "wepy.removeStorageSync",
      "body": [
          "wepy.removeStorageSync('${1:String}')"
      ],
      "description": "指定 key 删除本地数据，这是一个同步接口。"
  },
  "wepy.getLocation": {
      "prefix": "wepy.getLocation",
      "body": [
          "wepy.getLocation({",
          "\ttype: '${1:wgs84}', // 默认为 wgs84 返回 gps 坐标，gcj02 返回可用于 wepy.openLocation 的坐标",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "获取当前的地理位置、速度。"
  },
  "wepy.openLocation": {
      "prefix": "wepy.openLocation",
      "body": [
          "wepy.openLocation({",
          "\tlatitude: ${1:Float}, // 纬度，范围为-90~90，负数表示南纬",
          "\tlongitude: ${2:Float}, // 经度，范围为-180~180，负数表示西经",
          "\tscale: ${3:28}, // 缩放比例",
          "\t// name: '${4:name}', // 位置名",
          "\t// address: '${5:address}', // 地址的详细说明",
          "\tsuccess: function(res){",
          "\t\t${6:// success}",
          "\t}",
          "})"
      ],
      "description": "使用微信内置地图查看位置。"
  },
  "wepy.chooseLocation": {
      "prefix": "wepy.chooseLocation",
      "body": [
          "wepy.chooseLocation({",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "调起原生地图选点界面，返回用户所选的位置名称及经纬度。"
  },
  "wepy.createMapContext": {
      "prefix": "wepy.createMapContext",
      "body": [
          "wepy.createMapContext(${1:MapId})",
          ""
      ],
      "description": "创建并返回 map 上下文 mapContext 对象。"
  },
  "wepy.getNetworkType": {
      "prefix": "wepy.getNetworkType",
      "body": [
          "wepy.getNetworkType({",
          "\tsuccess: function(res) {",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "获取网络类型。"
  },
  "wepy.getSystemInfo": {
      "prefix": "wepy.getSystemInfo",
      "body": [
          "wepy.getSystemInfo({",
          "\tsuccess: function(res) {",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "获取系统信息，这是一个异步接口。"
  },
  "wepy.getSystemInfoSync": {
      "prefix": "wepy.getSystemInfoSync",
      "body": [
          "wepy.getSystemInfoSync()"
      ],
      "description": "获取系统信息，这是一个同步接口。"
  },
  "wepy.onAccelerometerChange": {
      "prefix": "wepy.onAccelerometerChange",
      "body": [
          "wepy.onAccelerometerChange(function(res){",
          "\t${1:// callback}",
          "})"
      ],
      "description": "监听重力感应数据，频率：5次/秒。"
  },
  "wepy.onCompassChange": {
      "prefix": "wepy.onCompassChange",
      "body": [
          "wepy.onCompassChange(function(res){",
          "\t${1:// callback}",
          "})"
      ],
      "description": "监听罗盘数据，频率：5次/秒。"
  },
  "wepy.makePhoneCall": {
      "prefix": "wepy.makePhoneCall",
      "body": [
          "wepy.makePhoneCall({",
          "\tphoneNumber: '${1:String}'",
          "})"
      ],
      "description": "拨打电话"
  },
  "wepy.scanCode": {
      "prefix": "wepy.scanCode",
      "body": [
          "wepy.scanCode({",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "调起客户端扫码界面，扫码成功后返回对应的结果"
  },
  "wepy.setNavigationBarTitle": {
      "prefix": "wepy.setNavigationBarTitle",
      "body": [
          "wepy.setNavigationBarTitle({",
          "\ttitle: '${1:String}'",
          "})"
      ],
      "description": "动态设置当前页面的标题。"
  },
  "wepy.hideNavigationBarLoading": {
      "prefix": "wepy.hideNavigationBarLoading",
      "body": [
          "wepy.hideNavigationBarLoading()"
      ],
      "description": "隐藏导航条加载动画。"
  },
  "wepy.showNavigationBarLoading": {
      "prefix": "wepy.showNavigationBarLoading",
      "body": [
          "wepy.showNavigationBarLoading()"
      ],
      "description": "在当前页面显示导航条加载动画。"
  },
  "wepy.navigateTo": {
      "prefix": "wepy.navigateTo",
      "body": [
          "wepy.navigateTo({",
          "\turl: '${1:String}',",
          "})"
      ],
      "description": "保留当前页面，跳转到应用内的某个页面，使用wepy.navigateBack可以返回到原页面。"
  },
  "wepy.redirectTo": {
      "prefix": "wepy.redirectTo",
      "body": [
          "wepy.redirectTo({",
          "\turl: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "关闭当前页面，跳转到应用内的某个页面。"
  },
  "wepy.navigateBack": {
      "prefix": "wepy.navigateBack",
      "body": [
          "wepy.navigateBack({",
          "\tdelta: ${1:1}, // 回退前 delta(默认为1) 页面",
          "})"
      ],
      "description": "关闭当前页面，回退前 delta(默认为1) 页面。"
  },
  "wepy.switchTab": {
      "prefix": "wepy.switchTab",
      "body": [
          "wepy.switchTab({",
          "\turl: '${1:String}',",
          "\tsuccess: function(res){",
          "\t\t${2:// success}",
          "\t}",
          "})"
      ],
      "description": "跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面"
  },
  "wepy.createContext": {
      "prefix": "wepy.createContext",
      "body": [
          "wepy.createContext()"
      ],
      "description": "创建并返回绘图上下文context对象。"
  },
  "wepy.drawCanvas": {
      "prefix": "wepy.drawCanvas",
      "body": [
          "wepy.drawCanvas({",
          "\tcanvasId: '${1:String}',",
          "\tactions: ${2:actions}",
          "})"
      ],
      "description": "drawCanvas。"
  },
  "wepy.canvasToTempFilePath": {
      "prefix": "wepy.canvasToTempFilePath",
      "body": [
          "wepy.canvasToTempFilePath({",
          "\tcanvasId: ${1:canvasId}",
          "})",
          ""
      ],
      "description": "创建 canvas 绘图上下文（指定 canvasId）"
  },
  "wepy.hideKeyboard": {
      "prefix": "wepy.hideKeyboard",
      "body": [
          "wepy.hideKeyboard()"
      ],
      "description": "收起键盘。"
  },
  "wepy.stopPullDownRefresh": {
      "prefix": "wepy.stopPullDownRefresh",
      "body": [
          "wepy.stopPullDownRefresh()"
      ],
      "description": "停止当前页面下拉刷新。"
  },
  "wepy.login": {
      "prefix": "wepy.login",
      "body": [
          "wepy.login({",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "调用接口获取登录凭证（code）进而换取用户登录态信息，包括用户的唯一标识（openid） 及本次登录的 会话密钥（session_key）。"
  },
  "wepy.getUserInfo": {
      "prefix": "wepy.getUserInfo",
      "body": [
          "wepy.getUserInfo({",
          "\tsuccess: function(res){",
          "\t\t${1:// success}",
          "\t}",
          "})"
      ],
      "description": "获取用户信息，需要先调用 wepy.login 接口。"
  },
  "wepy.requestPayment": {
      "prefix": "wepy.requestPayment",
      "body": [
          "wepy.requestPayment({",
          "\ttimeStamp: '${1:String1}',",
          "\tnonceStr: '${2:String2}',",
          "\tpackage: '${3:String3}',",
          "\tsignType: 'MD5',",
          "\tpaySign: '${4:String4}',",
          "\tsuccess: function(res){",
          "\t\t${5:// success}",
          "\t}",
          "})"
      ],
      "description": "发起微信支付。"
  },
  "wepy.showToask":{
      "prefix":"wepy.showToask",
      "body":[
          "wepy.showToast({",
              "\ttitle: '${1:成功}',",
              "\ticon: 'success', // loading",
              "\tduration: 1500,",
              "\tmask: true",
            "})"
      ],
      "description":"显示消息提示框"
  },
  "App": {
      "prefix": "App",
      "body": [
          "App({",
          "\tonLaunch: function () {",
          "\t},",
          "\tonShow: function () {",
          "\t},",
          "\tonHide: function () {",
          "\t},",
          "\tonError: function (msg) {",
          "\t}",
          "})"
      ],
      "description": "使用 App 函数来生成一个程序实例"
  },
  "Page": {
      "prefix": "Page",
      "body": [
          "Page({",
          "\tdata:{",
          "\t},",
          "\tonLoad:function(options){",
          "\t\t// 生命周期函数--监听页面加载",
          "\t},",
          "\tonReady:function(){",
          "\t\t// 生命周期函数--监听页面初次渲染完成",
          "\t},",
          "\tonShow:function(){",
          "\t\t// 生命周期函数--监听页面显示",
          "\t},",
          "\tonHide:function(){",
          "\t\t// 生命周期函数--监听页面隐藏",
          "\t},",
          "\tonUnload:function(){",
          "\t\t// 生命周期函数--监听页面卸载",
          "\t},",
          "\tonPullDownRefresh: function() {",
          "\t\t// 页面相关事件处理函数--监听用户下拉动作",
          "\t},",
          "\tonReachBottom: function() {",
          "\t\t// 页面上拉触底事件的处理函数",
          "\t},",
          "\tonShareAppMessage: function() {",
          "\t\t// 用户点击右上角分享",
          "\t\treturn {",
          "\t\t  title: '${9:title}', // 分享标题",
          "\t\t  desc: '${10:desc}', // 分享描述",
          "\t\t  path: '${11:path}' // 分享路径",
          "\t\t}",
          "\t}",
          "})"
      ],
      "description": "使用 Page 函数来生成一个页面实例"
  },
  "log": {
      "prefix": "cl",
      "body": [
          "console.log($0)"
      ],
      "description": "console.log();"
  },
  "setData":{
      "prefix":"sd",
      "body":[
          "setData({$1})"
      ],
      "description":"setData({})"
  },
  "getApp":{
      "prefix":"getApp",
      "body":[
          "var app = getApp()"
      ],
      "description":"getApp"
  },
  "onShareAppMessage":{
      "prefix":"onShareAppMessage",
      "body":[
          "onShareAppMessage: function () {",
              "\treturn {",
                "\t\ttitle: '${0:title}',",
                "\t\tpath: '/page/index/index'",
              "\t}",
            "}"
      ],
      "description":"转发"
  },
  "wepyParse":{
      "prefix":"wepyParse",
      "body":[
          "var wepyParse = require('../../wepyParse/wepyParse.js')"
      ],
      "description":"wepyParse"
  },
  "wepyParse.wepyParse":{
      "prefix":"wepyParse.wepyParse",
      "body":[
          "wepyParse.wepyParse('article', 'html', article, that, 5)"
      ],
      "description":"wepyParse.wepyParse"
  },
  "require":{
      "prefix":"require",
      "body":[
          "const api = require('$0')"
      ],
      "description":"const api = require('')"
  }

}